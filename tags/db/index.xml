<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DB on A lifelong learner.</title>
    <link>https://egolearner.github.io/tags/db/</link>
    <description>Recent content in DB on A lifelong learner.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 08 Dec 2022 08:29:57 +0800</lastBuildDate><atom:link href="https://egolearner.github.io/tags/db/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>simple-sqlite源码笔记</title>
      <link>https://egolearner.github.io/post/simple-sqlite-source-read/</link>
      <pubDate>Thu, 08 Dec 2022 08:29:57 +0800</pubDate>
      
      <guid>https://egolearner.github.io/post/simple-sqlite-source-read/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/madushadhanushka/simple-sqlite&#34;&gt;https://github.com/madushadhanushka/simple-sqlite&lt;/a&gt; 是从sqlite 2.5.0 抽取出的核心逻辑，适合用来学习sqlite的后端实现，如&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何实现page buffer&lt;/li&gt;
&lt;li&gt;如何实现基于磁盘的B树&lt;/li&gt;
&lt;li&gt;如何通过rollback journaling来实现事务支持和crash recovery&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;page-buffer-bool&#34;&gt;page buffer bool&lt;/h2&gt;
&lt;h3 id=&#34;page和pager实现&#34;&gt;page和pager实现&lt;/h3&gt;
&lt;p&gt;先看page的实现。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/madushadhanushka/simple-sqlite">https://github.com/madushadhanushka/simple-sqlite</a> 是从sqlite 2.5.0 抽取出的核心逻辑，适合用来学习sqlite的后端实现，如</p>
<ol>
<li>如何实现page buffer</li>
<li>如何实现基于磁盘的B树</li>
<li>如何通过rollback journaling来实现事务支持和crash recovery</li>
</ol>
<h2 id="page-buffer-bool">page buffer bool</h2>
<h3 id="page和pager实现">page和pager实现</h3>
<p>先看page的实现。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="c1">// page size 大小
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define SQLITE_PAGE_SIZE 1024
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 页号。0 代表 &#34;not a page&#34;, 文件中的第一个页从1开始。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">typedef</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">Pgno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">** Each in-memory image of a page begins with the following header.
</span></span></span><span class="line"><span class="cl"><span class="cm">** This header is only visible to this pager module.  The client
</span></span></span><span class="line"><span class="cl"><span class="cm">** code that calls pager sees only the data that follows the header.
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="k">typedef</span> <span class="k">struct</span> <span class="nc">PgHdr</span> <span class="n">PgHdr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">PgHdr</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">;</span>                 <span class="cm">/* The pager to which this page belongs */</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">pgno</span><span class="p">;</span>                     <span class="cm">/* The page number for this page */</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pNextHash</span><span class="p">,</span> <span class="o">*</span><span class="n">pPrevHash</span><span class="p">;</span>  <span class="cm">/* Hash collision chain for PgHdr.pgno */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nRef</span><span class="p">;</span>                      <span class="cm">/* Number of users of this page */</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pNextFree</span><span class="p">,</span> <span class="o">*</span><span class="n">pPrevFree</span><span class="p">;</span>  <span class="cm">/* Freelist of pages where nRef==0 */</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pNextAll</span><span class="p">,</span> <span class="o">*</span><span class="n">pPrevAll</span><span class="p">;</span>    <span class="cm">/* A list of all pages */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="n">inJournal</span><span class="p">;</span>                <span class="cm">/* TRUE if has been written to journal */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="n">inCkpt</span><span class="p">;</span>                   <span class="cm">/* TRUE if written to the checkpoint journal */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="n">dirty</span><span class="p">;</span>                    <span class="cm">/* TRUE if we need to write back changes */</span>
</span></span><span class="line"><span class="cl">  <span class="cm">/* SQLITE_PAGE_SIZE bytes of page data follow this header */</span>
</span></span><span class="line"><span class="cl">  <span class="cm">/* Pager.nExtra bytes of local data follow the page data */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>每个page的大小为SQLITE_PAGE_SIZE。PgHdr是page前面的一段内存，用于簿记一些信息，如是否是脏页(dirty)，是否已写入journal或checkpoint文件(inJournal, inCkpt)，页号（pgno），引用数(nRef)等。此外还记录一些双链表的next/prev指针，pNextHash记录哈希表的冲突链，pNextFree记录空闲页，pNextAll记录所有页。</p>
<p>在内存中布局如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="o">|</span>    <span class="k">sizeof</span><span class="p">(</span><span class="n">PgHdr</span><span class="p">)</span>   <span class="o">|</span>        <span class="n">SQLITE_PAGE_SIZE</span>     <span class="o">|</span>   <span class="n">Pager</span><span class="p">.</span><span class="n">nExtra</span>      <span class="o">|</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>按照上面的布局，定义了如下的宏来做内存地址的转换</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">** Convert a pointer to a PgHdr into a pointer to its data
</span></span></span><span class="line"><span class="cl"><span class="cm">** and back again.
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">#define PGHDR_TO_DATA(P)  ((void*)(&amp;(P)[1]))
</span></span></span><span class="line"><span class="cl"><span class="cp">#define DATA_TO_PGHDR(D)  (&amp;((PgHdr*)(D))[-1])
</span></span></span><span class="line"><span class="cl"><span class="cp">#define PGHDR_TO_EXTRA(P) ((void*)&amp;((char*)(&amp;(P)[1]))[SQLITE_PAGE_SIZE])
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>我们看PGHDR_TO_DATA的实现。最简单的情况下， <code>PgHdr* P = init xxx;</code> 把P当作一个数组，P[1] 相当于 P + sizeof(PgHdr)，指向了page的内存，&amp;P[1]的类型仍然为PgHdr*， 再将其转为void* 类型。sqlite实现时大量采用了类似的技巧。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">** A open page cache is an instance of the following structure.
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">Pager</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="o">*</span><span class="n">zFilename</span><span class="p">;</span>            <span class="cm">/* Name of the database file */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="o">*</span><span class="n">zJournal</span><span class="p">;</span>             <span class="cm">/* Name of the journal file */</span>
</span></span><span class="line"><span class="cl">  <span class="n">OsFile</span> <span class="n">fd</span><span class="p">,</span> <span class="n">jfd</span><span class="p">;</span>             <span class="cm">/* File descriptors for database and journal */</span>
</span></span><span class="line"><span class="cl">  <span class="n">OsFile</span> <span class="n">cpfd</span><span class="p">;</span>                <span class="cm">/* File descriptor for the checkpoint journal */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// page个数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">int</span> <span class="n">dbSize</span><span class="p">;</span>                 <span class="cm">/* Number of pages in the file */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">origDbSize</span><span class="p">;</span>             <span class="cm">/* dbSize before the current change */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">ckptSize</span><span class="p">,</span> <span class="n">ckptJSize</span><span class="p">;</span>    <span class="cm">/* Size of database and journal at ckpt_begin() */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nExtra</span><span class="p">;</span>                 <span class="cm">/* Add this many bytes to each in-memory page */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 用于做一些B树的清理工作
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">xDestructor</span><span class="p">)(</span><span class="kt">void</span><span class="o">*</span><span class="p">);</span> <span class="cm">/* Call this routine when freeing pages */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nPage</span><span class="p">;</span>                  <span class="cm">/* Total number of in-memory pages */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nRef</span><span class="p">;</span>                   <span class="cm">/* Number of in-memory pages with PgHdr.nRef&gt;0 */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">mxPage</span><span class="p">;</span>                 <span class="cm">/* Maximum number of pages to hold in cache */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nHit</span><span class="p">,</span> <span class="n">nMiss</span><span class="p">,</span> <span class="n">nOvfl</span><span class="p">;</span>     <span class="cm">/* Cache hits, missing, and LRU overflows */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">journalOpen</span><span class="p">;</span>             <span class="cm">/* True if journal file descriptors is valid */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">ckptOpen</span><span class="p">;</span>                <span class="cm">/* True if the checkpoint journal is open */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">ckptInUse</span><span class="p">;</span>               <span class="cm">/* True we are in a checkpoint */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">noSync</span><span class="p">;</span>                  <span class="cm">/* Do not sync the journal if true */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">state</span><span class="p">;</span>                   <span class="cm">/* SQLITE_UNLOCK, _READLOCK or _WRITELOCK */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">errMask</span><span class="p">;</span>                 <span class="cm">/* One of several kinds of errors */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">tempFile</span><span class="p">;</span>                <span class="cm">/* zFilename is a temporary file */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">readOnly</span><span class="p">;</span>                <span class="cm">/* True for a read-only database */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">needSync</span><span class="p">;</span>                <span class="cm">/* True if an fsync() is needed on the journal */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">dirtyFile</span><span class="p">;</span>               <span class="cm">/* True if database file has changed in any way */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="o">*</span><span class="n">aInJournal</span><span class="p">;</span>             <span class="cm">/* One bit for each page in the database file */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="o">*</span><span class="n">aInCkpt</span><span class="p">;</span>                <span class="cm">/* One bit for each page in the database */</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pFirst</span><span class="p">,</span> <span class="o">*</span><span class="n">pLast</span><span class="p">;</span>      <span class="cm">/* List of free pages */</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pAll</span><span class="p">;</span>                <span class="cm">/* List of all pages */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 用于根据页号快速定位到页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">aHash</span><span class="p">[</span><span class="n">N_PG_HASH</span><span class="p">];</span>    <span class="cm">/* Hash table to map page number of PgHdr */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Pager表示page cache实现，成员比较多，但都有注释。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">sqlitepager_open</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pager</span> <span class="o">**</span><span class="n">ppPager</span><span class="p">,</span>         <span class="cm">/* Return the Pager structure here */</span>
</span></span><span class="line"><span class="cl">  <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">zFilename</span><span class="p">,</span>   <span class="cm">/* Name of the database file to open */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">mxPage</span><span class="p">,</span>              <span class="cm">/* Max number of in-memory cache pages */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nExtra</span>               <span class="cm">/* Extra bytes append to each in-memory page */</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>sqlitepager_open用于创建一个Pager，其实现稍长，但逻辑比较简单，首先打开数据库文件，然后做成员的初始化。这里不介绍其具体实现。参数中的mxPage控制内存中的最大页数，nExtra是上面的page部局中最后额外分配的一段内存。</p>
<p>pager_lookup用于在内存中根据页号来查询页，如果没有缓存，不会从磁盘中加载。主要逻辑就是在哈希表中查找。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">** Find a page in the hash table given its page number.  Return
</span></span></span><span class="line"><span class="cl"><span class="cm">** a pointer to the page or NULL if not found.
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="n">PgHdr</span> <span class="o">*</span><span class="nf">pager_lookup</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">,</span> <span class="n">Pgno</span> <span class="n">pgno</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aHash</span><span class="p">[</span><span class="n">pgno</span> <span class="o">%</span> <span class="n">N_PG_HASH</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span><span class="p">(</span> <span class="n">p</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="o">!=</span><span class="n">pgno</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">p</span> <span class="o">=</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">pNextHash</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">p</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>pager_get和pager_lookup的不同在于，在没有命中缓存时会从磁盘中加载。在没有超过内存页数限制或者超过了但没有空闲页时，会malloc新的内存；否则从空闲页中重用page，如果所有的空闲页都是脏页，执行刷盘，这样所有的空闲页都不是脏页了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlitepager_get</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">,</span> <span class="n">Pgno</span> <span class="n">pgno</span><span class="p">,</span> <span class="kt">void</span> <span class="o">**</span><span class="n">ppPage</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Make sure we have not hit any critical errors.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span> 
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">==</span><span class="mi">0</span> <span class="o">||</span> <span class="n">pgno</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ERROR</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">errMask</span> <span class="o">&amp;</span> <span class="o">~</span><span class="p">(</span><span class="n">PAGER_ERR_FULL</span><span class="p">)</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">pager_errcode</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* If this is the first page accessed, then get a read lock
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** on the database file.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nRef</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">sqliteOsReadLock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">)</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="o">*</span><span class="n">ppPage</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">SQLITE_BUSY</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">SQLITE_READLOCK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="cm">/* If a journal file exists, try to play it back.
</span></span></span><span class="line"><span class="cl"><span class="cm">    */</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// nRef == 0，又存在journal文件，说明是崩溃后重启，需要从journal文件恢复
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">sqliteOsFileExists</span><span class="p">(</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">zJournal</span><span class="p">)</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* Search for page in cache */</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span> <span class="o">=</span> <span class="n">pager_lookup</span><span class="p">(</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pgno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 没有命中缓存
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* The requested page is not in the page cache. */</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">h</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nMiss</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 没有超过内存上限，或者没有空闲页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nPage</span><span class="o">&lt;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">mxPage</span> <span class="o">||</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pFirst</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="cm">/* Create a new page */</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 内存分配和我们上面的分析是一致的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">pPg</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span> <span class="k">sizeof</span><span class="p">(</span><span class="o">*</span><span class="n">pPg</span><span class="p">)</span> <span class="o">+</span> <span class="n">SQLITE_PAGE_SIZE</span> <span class="o">+</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nExtra</span>  <span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">memset</span><span class="p">(</span><span class="n">pPg</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="o">*</span><span class="n">pPg</span><span class="p">)</span> <span class="o">+</span> <span class="n">SQLITE_PAGE_SIZE</span> <span class="o">+</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nExtra</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPager</span> <span class="o">=</span> <span class="n">pPager</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextAll</span> <span class="o">=</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pAll</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pAll</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pAll</span><span class="o">-&gt;</span><span class="n">pPrevAll</span> <span class="o">=</span> <span class="n">pPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPrevAll</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pAll</span> <span class="o">=</span> <span class="n">pPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nPage</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="cm">/* Recycle an older page.  First locate the page to be recycled.
</span></span></span><span class="line"><span class="cl"><span class="cm">      ** Try to find one that is not dirty and is near the head of
</span></span></span><span class="line"><span class="cl"><span class="cm">      ** of the free list */</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span> <span class="o">=</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pFirst</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 当前没有任何引用的页为free页，但仍然可能为脏页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">while</span><span class="p">(</span> <span class="n">pPg</span> <span class="o">&amp;&amp;</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">dirty</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">pPg</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="c1">// 如果找不到可用的空闲页，则将所有的修改同步磁盘。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">// 之所以同步所有的页而非只同步一个页，是因为防止短期后续出现需要同步的情况。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="kt">int</span> <span class="n">rc</span> <span class="o">=</span> <span class="n">syncAllPages</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">          <span class="n">sqlitepager_rollback</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">          <span class="o">*</span><span class="n">ppPage</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">          <span class="k">return</span> <span class="n">SQLITE_IOERR</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">pPg</span> <span class="o">=</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pFirst</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="n">assert</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">nRef</span><span class="o">==</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">assert</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">dirty</span><span class="o">==</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="cm">/* Unlink the old page from the free list and the hash table
</span></span></span><span class="line"><span class="cl"><span class="cm">      */</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 省略free链，hash链的维护逻辑
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nOvfl</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span> <span class="o">=</span> <span class="n">pgno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 设置是否在journal或checkpoint中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">pgno</span><span class="o">&lt;=</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">origDbSize</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inJournal</span> <span class="o">=</span> <span class="p">(</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span><span class="p">[</span><span class="n">pgno</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">pgno</span><span class="o">&amp;</span><span class="mi">7</span><span class="p">)))</span><span class="o">!=</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inJournal</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInCkpt</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">pgno</span><span class="o">&lt;=</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">ckptSize</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inCkpt</span> <span class="o">=</span> <span class="p">(</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInCkpt</span><span class="p">[</span><span class="n">pgno</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">pgno</span><span class="o">&amp;</span><span class="mi">7</span><span class="p">)))</span><span class="o">!=</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inCkpt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">dirty</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">nRef</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">REFINFO</span><span class="p">(</span><span class="n">pPg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nRef</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 维护hash链
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">h</span> <span class="o">=</span> <span class="n">pager_hash</span><span class="p">(</span><span class="n">pgno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextHash</span> <span class="o">=</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aHash</span><span class="p">[</span><span class="n">h</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aHash</span><span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="o">=</span> <span class="n">pPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextHash</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">assert</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextHash</span><span class="o">-&gt;</span><span class="n">pPrevHash</span><span class="o">==</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextHash</span><span class="o">-&gt;</span><span class="n">pPrevHash</span> <span class="o">=</span> <span class="n">pPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span><span class="o">&lt;</span><span class="mi">0</span> <span class="p">)</span> <span class="n">sqlitepager_pagecount</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 对于磁盘上没有的页，置0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span><span class="o">&lt;</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">pgno</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">memset</span><span class="p">(</span><span class="n">PGHDR_TO_DATA</span><span class="p">(</span><span class="n">pPg</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">sqliteOsSeek</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">,</span> <span class="p">(</span><span class="n">pgno</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 从磁盘读取
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsRead</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">,</span> <span class="n">PGHDR_TO_DATA</span><span class="p">(</span><span class="n">pPg</span><span class="p">),</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nExtra</span><span class="o">&gt;</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">memset</span><span class="p">(</span><span class="n">PGHDR_TO_EXTRA</span><span class="p">(</span><span class="n">pPg</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nExtra</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* The requested page is in the page cache. */</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nHit</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">page_ref</span><span class="p">(</span><span class="n">pPg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">*</span><span class="n">ppPage</span> <span class="o">=</span> <span class="n">PGHDR_TO_DATA</span><span class="p">(</span><span class="n">pPg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>sqlite对page实现了引用计数，引用计数变为0时加入空闲链，变为非0时从空闲链移除。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">page_ref</span><span class="p">(</span><span class="n">PgHdr</span> <span class="o">*</span><span class="n">pPg</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">nRef</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* The page is currently on the freelist.  Remove it. */</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPrevFree</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPrevFree</span><span class="o">-&gt;</span><span class="n">pNextFree</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pFirst</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextFree</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextFree</span><span class="o">-&gt;</span><span class="n">pPrevFree</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPrevFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pLast</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPrevFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nRef</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">nRef</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">REFINFO</span><span class="p">(</span><span class="n">pPg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="事务及crash-recovery实现">事务及crash recovery实现</h3>
<p>sqlite 3.7.0实现了wal journal，之前采用的是rollback journaling。所谓rollback journaling，是指在修改page前，先将page的内容备份到journal文件中，然后再修改内存中的page，在事务提交时成功刷新到磁盘后再移除journal文件。如果事务在成功提交之前出现crash，在重启时sqlite会从journal文件恢复page，使数据库恢复事务提交前的状态。</p>
<p>在事务开始时，需要调用<code>sqlitepager_begin</code> ，会创建journal文件和维护journal相关的标记位，记录当前文件的页数用于回滚。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlitepager_begin</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">pData</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pPg</span> <span class="o">=</span> <span class="n">DATA_TO_PGHDR</span><span class="p">(</span><span class="n">pData</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span><span class="o">==</span><span class="n">SQLITE_READLOCK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span><span class="o">==</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 写锁
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsWriteLock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 用于记录哪些页已经写入journal文件了
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span>  <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span>  <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span><span class="o">/</span><span class="mi">8</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">memset</span><span class="p">(</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span> <span class="p">,</span> <span class="mi">0</span><span class="p">,</span>  <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span><span class="o">/</span><span class="mi">8</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 打开journal文件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsOpenExclusive</span><span class="p">(</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">zJournal</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">journalOpen</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">needSync</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dirtyFile</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">SQLITE_WRITELOCK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlitepager_pagecount</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 记录之前的page个数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">origDbSize</span> <span class="o">=</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 写入magic和之前的page页数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsWrite</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="n">aJournalMagic</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">aJournalMagic</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsWrite</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">Pgno</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">rc</span> <span class="o">=</span> <span class="n">pager_unwritelock</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">)</span> <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_FULL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在修改page前，需要调用<code>sqlitepager_write</code> ，将page内容备份到journal文件中，并设置dirty标记。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlitepager_write</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">pData</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pPg</span> <span class="o">=</span> <span class="n">DATA_TO_PGHDR</span><span class="p">(</span><span class="n">pData</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Check for errors
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">errMask</span> <span class="p">){</span> 
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">pager_errcode</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">readOnly</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_PERM</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Mark the page as dirty.  If the page has already been written
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** to the journal then we can return right away.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">dirty</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inJournal</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inCkpt</span> <span class="o">||</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">ckptInUse</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dirtyFile</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* If we get this far, it means that the page needs to be
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** written to the transaction journal or the ckeckpoint journal
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** or both.
</span></span></span><span class="line"><span class="cl"><span class="cm">  **
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** First check to see that the transaction journal exists and
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** create it if it does not.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span><span class="o">!=</span><span class="n">SQLITE_UNLOCK</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 调用sqlitepager_begin，如果之前已经调用过，相当于空操作
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_begin</span><span class="p">(</span><span class="n">pData</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dirtyFile</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span><span class="o">==</span><span class="n">SQLITE_WRITELOCK</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">journalOpen</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* The transaction journal now exists and we have a write lock on the
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** main database file.  Write the current page to the transaction 
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** journal if it is not there already.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 如果没有备份到journal且在文件原有范围内
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inJournal</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span> <span class="o">&lt;=</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">origDbSize</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 写入页号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsWrite</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">Pgno</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 写入page内容
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsWrite</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="n">pData</span><span class="p">,</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span><span class="o">!=</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 设置标志位
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span><span class="p">[</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">|=</span> <span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="o">&amp;</span><span class="mi">7</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">needSync</span> <span class="o">=</span> <span class="o">!</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">noSync</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inJournal</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Update the database size and return.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span><span class="o">&lt;</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在事务回滚时，调用<code>sqlitepager_rollback</code> ，从journal文件恢复备份的page内容。对于journal文件中所有完整的页，将其读出后写入数据库文件的相应页，并更新到存在的page缓存。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlitepager_rollback</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">errMask</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">errMask</span><span class="o">!=</span><span class="n">PAGER_ERR_FULL</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span><span class="o">&gt;=</span><span class="n">SQLITE_WRITELOCK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pager_playback</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">pager_errcode</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span><span class="o">!=</span><span class="n">SQLITE_WRITELOCK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 回放
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">pager_playback</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_CORRUPT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">errMask</span> <span class="o">|=</span> <span class="n">PAGER_ERR_CORRUPT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 设置页数为-1，后面有需要会自动获取实际的页数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">pager_playback</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nRec</span><span class="p">;</span>                <span class="cm">/* Number of Records */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>                   <span class="cm">/* Loop counter */</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">mxPg</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>           <span class="cm">/* Size of the original file in pages */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">aMagic</span><span class="p">[</span><span class="k">sizeof</span><span class="p">(</span><span class="n">aJournalMagic</span><span class="p">)];</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Figure out how many records are in the journal.  Abort early if
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** the journal is empty.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">journalOpen</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqliteOsSeek</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsFileSize</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">nRec</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">end_playback</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 校验至少需要存储一个完整的page
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">nRec</span> <span class="o">=</span> <span class="p">(</span><span class="n">nRec</span> <span class="o">-</span> <span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="n">aMagic</span><span class="p">)</span><span class="o">+</span><span class="k">sizeof</span><span class="p">(</span><span class="n">Pgno</span><span class="p">)))</span> <span class="o">/</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">PageRecord</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">nRec</span><span class="o">&lt;=</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">end_playback</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Read the beginning of the journal and truncate the
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** database file back to its original size.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 校验magic
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsRead</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="n">aMagic</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">aMagic</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="o">||</span> <span class="n">memcmp</span><span class="p">(</span><span class="n">aMagic</span><span class="p">,</span><span class="n">aJournalMagic</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">aMagic</span><span class="p">))</span><span class="o">!=</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_PROTOCOL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">end_playback</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 读取最大页数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsRead</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">mxPg</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">mxPg</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">end_playback</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 丢弃最后不完整的页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsTruncate</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">,</span> <span class="n">mxPg</span><span class="o">*</span><span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">end_playback</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 恢复页数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span> <span class="o">=</span> <span class="n">mxPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="cm">/* Copy original pages out of the journal and back into the database file.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">nRec</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">pager_playback_one_page</span><span class="p">(</span><span class="n">pPager</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">end_playback</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pager_unwritelock</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">errMask</span> <span class="o">|=</span> <span class="n">PAGER_ERR_CORRUPT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_CORRUPT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">pager_unwritelock</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">pager_playback_one_page</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">,</span> <span class="n">OsFile</span> <span class="o">*</span><span class="n">jfd</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pPg</span><span class="p">;</span>              <span class="cm">/* An existing page in the cache */</span>
</span></span><span class="line"><span class="cl">  <span class="n">PageRecord</span> <span class="n">pgRec</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 读页号和page内容
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsRead</span><span class="p">(</span><span class="n">jfd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pgRec</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pgRec</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Sanity checking on the page */</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pgRec</span><span class="p">.</span><span class="n">pgno</span><span class="o">&gt;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span> <span class="o">||</span> <span class="n">pgRec</span><span class="p">.</span><span class="n">pgno</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_CORRUPT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Playback the page.  Update the in-memory copy of the page
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** at the same time, if there is one.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 如果有缓存的话，也更新到缓存
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pPg</span> <span class="o">=</span> <span class="n">pager_lookup</span><span class="p">(</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pgRec</span><span class="p">.</span><span class="n">pgno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">memcpy</span><span class="p">(</span><span class="n">PGHDR_TO_DATA</span><span class="p">(</span><span class="n">pPg</span><span class="p">),</span> <span class="n">pgRec</span><span class="p">.</span><span class="n">aData</span><span class="p">,</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">memset</span><span class="p">(</span><span class="n">PGHDR_TO_EXTRA</span><span class="p">(</span><span class="n">pPg</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">nExtra</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 写入文件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsSeek</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">,</span> <span class="p">(</span><span class="n">pgRec</span><span class="p">.</span><span class="n">pgno</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsWrite</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">,</span> <span class="n">pgRec</span><span class="p">.</span><span class="n">aData</span><span class="p">,</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>事务提交时需要调用<code>sqlitepager_commit</code> ，刷盘并释放写锁。看实现会先同步journal文件，然后将内存中的page写入磁盘并同步数据库文件。在释放写锁时会删除journal文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlitepager_commit</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">errMask</span><span class="o">==</span><span class="n">PAGER_ERR_FULL</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_rollback</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">)</span> <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_FULL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">errMask</span><span class="o">!=</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">pager_errcode</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span><span class="o">!=</span><span class="n">SQLITE_WRITELOCK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ERROR</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">journalOpen</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dirtyFile</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 没有修改直接返回
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="cm">/* Exit early (without doing the time-consuming sqliteOsSync() calls)
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** if there have been no changes to the database file. */</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">pager_unwritelock</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 同步journal文件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">needSync</span> <span class="o">&amp;&amp;</span> <span class="n">sqliteOsSync</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">jfd</span><span class="p">)</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">commit_abort</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 写所有的脏页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">for</span><span class="p">(</span><span class="n">pPg</span><span class="o">=</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">pAll</span><span class="p">;</span> <span class="n">pPg</span><span class="p">;</span> <span class="n">pPg</span><span class="o">=</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pNextAll</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">dirty</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsSeek</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">,</span> <span class="p">(</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">commit_abort</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteOsWrite</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">,</span> <span class="n">PGHDR_TO_DATA</span><span class="p">(</span><span class="n">pPg</span><span class="p">),</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">commit_abort</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 同步数据库文件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">noSync</span> <span class="o">&amp;&amp;</span> <span class="n">sqliteOsSync</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPager</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">)</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">commit_abort</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 释放写锁时会删除journal文件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">pager_unwritelock</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">dbSize</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/* Jump here if anything goes wrong during the commit process.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl"><span class="nl">commit_abort</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_rollback</span><span class="p">(</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_FULL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>某些情况下脏页有可能整页被丢弃，比如在B树删除时可能page被合并到相邻的页，这时可以调用<code>sqlitepager_dont_write</code> 来减少事务提交时的写盘量，通过去掉脏页标记使得事务提交时不需要刷新这个页到磁盘。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">sqlitepager_dont_write</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">,</span> <span class="n">Pgno</span> <span class="n">pgno</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPg</span> <span class="o">=</span> <span class="n">pager_lookup</span><span class="p">(</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pgno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPg</span> <span class="o">&amp;&amp;</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">dirty</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">dirty</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>某些情况下，在写数据页时可能之前的数据不需要备份到journal文件中，比如重用之前释放的磁盘页时，这时可以调用<code>sqlitepager_dont_rollback</code> ，其主要逻辑为设置在journal文件中的标志位。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">sqlitepager_dont_rollback</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">pData</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">PgHdr</span> <span class="o">*</span><span class="n">pPg</span> <span class="o">=</span> <span class="n">DATA_TO_PGHDR</span><span class="p">(</span><span class="n">pData</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span> <span class="o">=</span> <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">state</span><span class="o">!=</span><span class="n">SQLITE_WRITELOCK</span> <span class="o">||</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">journalOpen</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inJournal</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span> <span class="o">&lt;=</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">origDbSize</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span><span class="o">!=</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInJournal</span><span class="p">[</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">|=</span> <span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="o">&amp;</span><span class="mi">7</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 只设置标志位，但不写入journal文件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inJournal</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">ckptInUse</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPager</span><span class="o">-&gt;</span><span class="n">aInCkpt</span><span class="p">[</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">|=</span> <span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">pPg</span><span class="o">-&gt;</span><span class="n">pgno</span><span class="o">&amp;</span><span class="mi">7</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPg</span><span class="o">-&gt;</span><span class="n">inCkpt</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="b树实现">B树实现</h2>
<p>这个版本的sqlite的表和索引都使用了B树实现，还没有实现B+树。</p>
<p>一个打开的数据库用下面的结构体表示</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">Btree</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">;</span>        <span class="cm">/* The page cache */</span>
</span></span><span class="line"><span class="cl">  <span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCursor</span><span class="p">;</span>    <span class="cm">/* A list of all open cursors */</span>
</span></span><span class="line"><span class="cl">  <span class="n">PageOne</span> <span class="o">*</span><span class="n">page1</span><span class="p">;</span>       <span class="cm">/* First page of the database */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">inTrans</span><span class="p">;</span>           <span class="cm">/* True if a transaction is in progress */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">inCkpt</span><span class="p">;</span>            <span class="cm">/* True if there is a checkpoint on the transaction */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">readOnly</span><span class="p">;</span>          <span class="cm">/* True if the underlying file is readonly */</span>
</span></span><span class="line"><span class="cl">  <span class="n">Hash</span> <span class="n">locks</span><span class="p">;</span>           <span class="cm">/* Key: root page number.  Data: lock count */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>数据库文件的第1个page，用<code>PageOne</code> 来表示，其中包含标识数据库文件的magic number，以及空闲页的信息。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">PageOne</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// ** This file contains an SQLite 2.1 database **
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">char</span> <span class="n">zMagic</span><span class="p">[</span><span class="n">MAGIC_SIZE</span><span class="p">];</span> <span class="cm">/* String that identifies the file as a database */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 0xdae37528
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">int</span> <span class="n">iMagic</span><span class="p">;</span>              <span class="cm">/* Integer to verify correct byte order */</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">freeList</span><span class="p">;</span>           <span class="cm">/* First free page in a list of all free pages */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nFree</span><span class="p">;</span>               <span class="cm">/* Number of pages on the free list */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">aMeta</span><span class="p">[</span><span class="n">SQLITE_N_BTREE_META</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>  <span class="cm">/* User defined integers */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>一个数据库文件中可以包含多个B树，这些B树存储在第2个或者页号更大的page中。</p>
<h3 id="空闲页表">空闲页表</h3>
<p>PageOne.freeList指向第一个存储空闲页信息的页。空闲页信息使用<code>FreelistInfo</code> 存储</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">FreelistInfo</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nFree</span><span class="p">;</span>  <span class="c1">// 空闲页的个数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">Pgno</span> <span class="n">aFree</span><span class="p">[(</span><span class="n">OVERFLOW_SIZE</span><span class="o">-</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">))</span><span class="o">/</span><span class="k">sizeof</span><span class="p">(</span><span class="n">Pgno</span><span class="p">)];</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>存储空闲页信息的页使用overflow页的格式存储，使用OverflowPage.iNext指向下一个存储空闲页信息的页，这些空闲页信息构成了一个链表。FreelistInfo存储在OverflowPage.aPayload处。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="cp">#define OVERFLOW_SIZE (SQLITE_PAGE_SIZE-sizeof(Pgno))
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">OverflowPage</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="n">aPayload</span><span class="p">[</span><span class="n">OVERFLOW_SIZE</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>添加一个页到空闲页表的实现如下。如果存在不满的存储空闲页信息的页，则追加到其中，否则创建一个新的存储空闲页信息的页。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">** Add a page of the database file to the freelist.  Either pgno or
</span></span></span><span class="line"><span class="cl"><span class="cm">** pPage but not both may be 0. 
</span></span></span><span class="line"><span class="cl"><span class="cm">**
</span></span></span><span class="line"><span class="cl"><span class="cm">** sqlitepager_unref() is NOT called for pPage.
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">freePage</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">pPage</span><span class="p">,</span> <span class="n">Pgno</span> <span class="n">pgno</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">PageOne</span> <span class="o">*</span><span class="n">pPage1</span> <span class="o">=</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">page1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">OverflowPage</span> <span class="o">*</span><span class="n">pOvfl</span> <span class="o">=</span> <span class="p">(</span><span class="n">OverflowPage</span><span class="o">*</span><span class="p">)</span><span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">needUnref</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pMemPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pgno</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">pOvfl</span><span class="o">!=</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pgno</span> <span class="o">=</span> <span class="n">sqlitepager_pagenumber</span><span class="p">(</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">pgno</span><span class="o">&gt;</span><span class="mi">2</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pPage1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 计数加1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">&gt;</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">freeList</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">OverflowPage</span> <span class="o">*</span><span class="n">pFreeIdx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">freeList</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pFreeIdx</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">FreelistInfo</span> <span class="o">*</span><span class="n">pInfo</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreelistInfo</span><span class="o">*</span><span class="p">)</span><span class="n">pFreeIdx</span><span class="o">-&gt;</span><span class="n">aPayload</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 如果有空闲空间，则写入
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">if</span><span class="p">(</span> <span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">&lt;</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">aFree</span><span class="p">)</span><span class="o">/</span><span class="k">sizeof</span><span class="p">(</span><span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">aFree</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pFreeIdx</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">          <span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">aFree</span><span class="p">[</span><span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="p">]</span> <span class="o">=</span> <span class="n">pgno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">          <span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">          <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pFreeIdx</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">          <span class="c1">// 取消pgno页的脏页标记
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>          <span class="n">sqlitepager_dont_write</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pgno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">          <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pFreeIdx</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 运行到这里意味着所有的存储空闲页信息的页都已写满，需要用当前页来存储空闲页信息。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">pOvfl</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">pgno</span><span class="o">&gt;</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pgno</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">needUnref</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">needUnref</span> <span class="p">)</span> <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 维护链表
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pOvfl</span><span class="o">-&gt;</span><span class="n">iNext</span> <span class="o">=</span> <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">freeList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">freeList</span> <span class="o">=</span> <span class="n">pgno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// memset也保证了FreelistInfo.nFree == 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">memset</span><span class="p">(</span><span class="n">pOvfl</span><span class="o">-&gt;</span><span class="n">aPayload</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">OVERFLOW_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pMemPage</span> <span class="o">=</span> <span class="p">(</span><span class="n">MemPage</span><span class="o">*</span><span class="p">)</span><span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pMemPage</span><span class="o">-&gt;</span><span class="n">isInit</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pMemPage</span><span class="o">-&gt;</span><span class="n">pParent</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pMemPage</span><span class="o">-&gt;</span><span class="n">pParent</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pMemPage</span><span class="o">-&gt;</span><span class="n">pParent</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">needUnref</span> <span class="p">)</span> <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>从空闲页表分配一个页的实现如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">allocatePage</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">,</span> <span class="n">MemPage</span> <span class="o">**</span><span class="n">ppPage</span><span class="p">,</span> <span class="n">Pgno</span> <span class="o">*</span><span class="n">pPgno</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">PageOne</span> <span class="o">*</span><span class="n">pPage1</span> <span class="o">=</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">page1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 如果有空闲页，从空闲页分配；否则从磁盘加载，分配一个新页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">freeList</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">OverflowPage</span> <span class="o">*</span><span class="n">pOvfl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">FreelistInfo</span> <span class="o">*</span><span class="n">pInfo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pPage1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">freeList</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">pInfo</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreelistInfo</span><span class="o">*</span><span class="p">)</span><span class="n">pOvfl</span><span class="o">-&gt;</span><span class="n">aPayload</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 这个空闲页信息页只的空闲页为0，把这个页本身分配出去。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="o">*</span><span class="n">pPgno</span> <span class="o">=</span> <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">freeList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPage1</span><span class="o">-&gt;</span><span class="n">freeList</span> <span class="o">=</span> <span class="n">pOvfl</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="o">*</span><span class="n">ppPage</span> <span class="o">=</span> <span class="p">(</span><span class="n">MemPage</span><span class="o">*</span><span class="p">)</span><span class="n">pOvfl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 从中拿一个页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="o">*</span><span class="n">pPgno</span> <span class="o">=</span> <span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">aFree</span><span class="p">[</span><span class="n">pInfo</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="o">*</span><span class="n">pPgno</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="n">ppPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">          <span class="c1">// 设置空闲页的内容不需要回滚
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">sqlitepager_dont_rollback</span><span class="p">(</span><span class="o">*</span><span class="n">ppPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="o">*</span><span class="n">ppPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span><span class="n">pPgno</span> <span class="o">=</span> <span class="n">sqlitepager_pagecount</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 从Pager分配一个新页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="o">*</span><span class="n">pPgno</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="n">ppPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="o">*</span><span class="n">ppPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="b树节点页实现">B树节点页实现</h3>
<p>节点使用下面的结构体来表示。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">MemPage</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">union</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">aDisk</span><span class="p">[</span><span class="n">SQLITE_PAGE_SIZE</span><span class="p">];</span>  <span class="cm">/* Page data stored on disk */</span>
</span></span><span class="line"><span class="cl">    <span class="n">PageHdr</span> <span class="n">hdr</span><span class="p">;</span>                   <span class="cm">/* Overlay page header */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="n">u</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">isInit</span><span class="p">;</span>                    <span class="cm">/* True if auxiliary data is initialized */</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pParent</span><span class="p">;</span>              <span class="cm">/* The parent of this page.  NULL for root */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 空闲字节数。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">int</span> <span class="n">nFree</span><span class="p">;</span>                     <span class="cm">/* Number of free bytes in u.aDisk[] */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 存储的cell个数。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">int</span> <span class="n">nCell</span><span class="p">;</span>                     <span class="cm">/* Number of entries on this page */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 是否已经overfull，即超出page size
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">int</span> <span class="n">isOverfull</span><span class="p">;</span>                <span class="cm">/* Some apCell[] points outside u.aDisk[] */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 排序的Cell列表。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">Cell</span> <span class="o">*</span><span class="n">apCell</span><span class="p">[</span><span class="n">MX_CELL</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span>       <span class="cm">/* All data entires in sorted order */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">#define EXTRA_SIZE (sizeof(MemPage)-SQLITE_PAGE_SIZE)
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>MemPage.u对应磁盘上的page，之后的数据只在内存中存储。在创建Pager时，会设置Pager.nExtra = EXTRA_SIZE以便在创建内存中的页时分配足够的内存。</p>
<p>每个节点的KV和左子指针，使用Cell结构来表示。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">CellHdr</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">leftChild</span><span class="p">;</span> <span class="cm">/* Child page that comes before this cell */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="n">nKey</span><span class="p">;</span>       <span class="cm">/* Number of bytes in the key */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="n">iNext</span><span class="p">;</span>      <span class="cm">/* Index in MemPage.u.aDisk[] of next cell in sorted order */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">nKeyHi</span><span class="p">;</span>      <span class="cm">/* Upper 8 bits of key size for keys larger than 64K bytes */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">nDataHi</span><span class="p">;</span>     <span class="cm">/* Upper 8 bits of data size when the size is more than 64K */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="n">nData</span><span class="p">;</span>      <span class="cm">/* Number of bytes of data */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">#define NKEY(h)  (h.nKey + h.nKeyHi*65536)
</span></span></span><span class="line"><span class="cl"><span class="cp">#define NDATA(h) (h.nData + h.nDataHi*65536)
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Cell的最小大小
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define MIN_CELL_SIZE  (sizeof(CellHdr)+4)
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="c1">// 一个页中最多可以存多少个Cell
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define MX_CELL ((SQLITE_PAGE_SIZE-sizeof(PageHdr))/MIN_CELL_SIZE)
</span></span></span><span class="line"><span class="cl"><span class="cp">#define USABLE_SPACE  (SQLITE_PAGE_SIZE - sizeof(PageHdr))
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="c1">// 不使用overflow页时Cell的最大字节数，保证一个page至少可以存4个Cell
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define MX_LOCAL_PAYLOAD ((USABLE_SPACE/4-(sizeof(CellHdr)+sizeof(Pgno)))&amp;~3)
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">Cell</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">CellHdr</span> <span class="n">h</span><span class="p">;</span>                        <span class="cm">/* The cell header */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="n">aPayload</span><span class="p">[</span><span class="n">MX_LOCAL_PAYLOAD</span><span class="p">];</span>  <span class="cm">/* Key and data */</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 第一个overflow页的页号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">Pgno</span> <span class="n">ovfl</span><span class="p">;</span>                        <span class="cm">/* The first overflow page */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Cell由CellHdr和payload数据以及第一个overflow页的页号构成。虽然Cell的结构体的长度是固定的，但实际Cell是变长的，通过CellHdr来确定Cell的实际长度。payload至少4个字节，最多MX_LOCAL_PAYLOAD个字节，如果payload需要的空间大于MX_LOCAL_PAYLOAD时会分配overflow页。</p>
<p>CellHdr描述了key和value的长度，都使用了24个bit表示，为了节省空间拆分为高位8bit的nKeyHi和16 bit的nKey（如果不这么拆分的话要占用32个bit），定义了NKEY和NDATA宏来得到K和V的长度。CellHdr.leftChild指向了左子树的页号，其中存储的key都小于这个Cell的key。</p>
<p>分配一个Cell的实现如下，如果空间不足，会分配overflow页来存储。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">fillInCell</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">,</span>              <span class="cm">/* The whole Btree.  Needed to allocate pages */</span>
</span></span><span class="line"><span class="cl">  <span class="n">Cell</span> <span class="o">*</span><span class="n">pCell</span><span class="p">,</span>             <span class="cm">/* Populate this Cell structure */</span>
</span></span><span class="line"><span class="cl">  <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">pKey</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nKey</span><span class="p">,</span>    <span class="cm">/* The key */</span>
</span></span><span class="line"><span class="cl">  <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">pData</span><span class="p">,</span><span class="kt">int</span> <span class="n">nData</span>    <span class="cm">/* The data */</span>
</span></span><span class="line"><span class="cl"><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">OverflowPage</span> <span class="o">*</span><span class="n">pOvfl</span><span class="p">,</span> <span class="o">*</span><span class="n">pPrior</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="o">*</span><span class="n">pNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">spaceLeft</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nPayload</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pPayload</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="o">*</span><span class="n">pSpace</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 设置size
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">nKey</span> <span class="o">=</span> <span class="n">nKey</span> <span class="o">&amp;</span> <span class="mh">0xffff</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">nKeyHi</span> <span class="o">=</span> <span class="n">nKey</span> <span class="o">&gt;&gt;</span> <span class="mi">16</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">nData</span> <span class="o">=</span> <span class="n">nData</span> <span class="o">&amp;</span> <span class="mh">0xffff</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">nDataHi</span> <span class="o">=</span> <span class="n">nData</span> <span class="o">&gt;&gt;</span> <span class="mi">16</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">iNext</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">pNext</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pCell</span><span class="o">-&gt;</span><span class="n">ovfl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pSpace</span> <span class="o">=</span> <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">aPayload</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">spaceLeft</span> <span class="o">=</span> <span class="n">MX_LOCAL_PAYLOAD</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPayload</span> <span class="o">=</span> <span class="n">pKey</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pKey</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">nPayload</span> <span class="o">=</span> <span class="n">nKey</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPrior</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span><span class="p">(</span> <span class="n">nPayload</span><span class="o">&gt;</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">spaceLeft</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 分配一个overflow页，页号设置到pCell-&gt;ovfl或者pOvfl-&gt;iNext中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">rc</span> <span class="o">=</span> <span class="n">allocatePage</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="p">(</span><span class="n">MemPage</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pOvfl</span><span class="p">,</span> <span class="n">pNext</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="o">*</span><span class="n">pNext</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">pPrior</span> <span class="p">)</span> <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pPrior</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">clearCell</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pCell</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPrior</span> <span class="o">=</span> <span class="n">pOvfl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">spaceLeft</span> <span class="o">=</span> <span class="n">OVERFLOW_SIZE</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">pSpace</span> <span class="o">=</span> <span class="n">pOvfl</span><span class="o">-&gt;</span><span class="n">aPayload</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">pNext</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pOvfl</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">n</span> <span class="o">=</span> <span class="n">nPayload</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">n</span><span class="o">&gt;</span><span class="n">spaceLeft</span> <span class="p">)</span> <span class="n">n</span> <span class="o">=</span> <span class="n">spaceLeft</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 挎包
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">memcpy</span><span class="p">(</span><span class="n">pSpace</span><span class="p">,</span> <span class="n">pPayload</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">nPayload</span> <span class="o">-=</span> <span class="n">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">nPayload</span><span class="o">==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">pData</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// key写完后接着写value
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">pPayload</span> <span class="o">=</span> <span class="n">pData</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">nPayload</span> <span class="o">=</span> <span class="n">nData</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">pData</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPayload</span> <span class="o">+=</span> <span class="n">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">spaceLeft</span> <span class="o">-=</span> <span class="n">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pSpace</span> <span class="o">+=</span> <span class="n">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">*</span><span class="n">pNext</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPrior</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pPrior</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>释放Cell涉及到两个函数。<code>clearCell</code> 负责释放Cell分配的overflow页。<code>dropCell</code> 负责将Cell非溢出的内存加入空闲链表中。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">clearCell</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">,</span> <span class="n">Cell</span> <span class="o">*</span><span class="n">pCell</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span> <span class="o">=</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">OverflowPage</span> <span class="o">*</span><span class="n">pOvfl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">ovfl</span><span class="p">,</span> <span class="n">nextOvfl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">NKEY</span><span class="p">(</span><span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">)</span> <span class="o">+</span> <span class="n">NDATA</span><span class="p">(</span><span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">MX_LOCAL_PAYLOAD</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">ovfl</span> <span class="o">=</span> <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">ovfl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">ovfl</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span><span class="p">(</span> <span class="n">ovfl</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 释放overflow页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pPager</span><span class="p">,</span> <span class="n">ovfl</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">nextOvfl</span> <span class="o">=</span> <span class="n">pOvfl</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">freePage</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pOvfl</span><span class="p">,</span> <span class="n">ovfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pOvfl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">ovfl</span> <span class="o">=</span> <span class="n">nextOvfl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">dropCell</span><span class="p">(</span><span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">,</span> <span class="kt">int</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sz</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">j</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">idx</span><span class="o">&gt;=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">idx</span><span class="o">&lt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sz</span><span class="o">==</span><span class="n">cellSize</span><span class="p">(</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">idx</span><span class="p">])</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sqlitepager_iswriteable</span><span class="p">(</span><span class="n">pPage</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 释放Cell本身占的空间
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">freeSpace</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">idx</span><span class="p">])</span> <span class="o">-</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pPage</span><span class="p">),</span> <span class="n">sz</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="n">idx</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">/</span>
</span></span><span class="line"><span class="cl"><span class="o">**</span> <span class="n">Most</span> <span class="n">of</span> <span class="n">the</span> <span class="n">effort</span> <span class="n">here</span> <span class="n">is</span> <span class="n">involved</span> <span class="n">in</span> <span class="n">coalesing</span> <span class="n">adjacent</span>
</span></span><span class="line"><span class="cl"><span class="o">**</span> <span class="n">free</span> <span class="n">blocks</span> <span class="n">into</span> <span class="n">a</span> <span class="n">single</span> <span class="n">big</span> <span class="n">free</span> <span class="n">block</span><span class="p">.</span>
</span></span><span class="line"><span class="cl"><span class="err">*/</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="n">freeSpace</span><span class="p">(</span><span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">,</span> <span class="kt">int</span> <span class="n">start</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="n">size</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="o">*</span><span class="n">pIdx</span><span class="p">,</span> <span class="n">idx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">FreeBlk</span> <span class="o">*</span><span class="n">pFBlk</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">FreeBlk</span> <span class="o">*</span><span class="n">pNew</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">FreeBlk</span> <span class="o">*</span><span class="n">pNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sqlitepager_iswriteable</span><span class="p">(</span><span class="n">pPage</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">size</span> <span class="o">==</span> <span class="n">ROUNDUP</span><span class="p">(</span><span class="n">size</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">start</span> <span class="o">==</span> <span class="n">ROUNDUP</span><span class="p">(</span><span class="n">start</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">firstFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">idx</span> <span class="o">=</span> <span class="o">*</span><span class="n">pIdx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span><span class="p">(</span> <span class="n">idx</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">idx</span><span class="o">&lt;</span><span class="n">start</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pFBlk</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreeBlk</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">idx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">idx</span> <span class="o">+</span> <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iSize</span> <span class="o">==</span> <span class="n">start</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iSize</span> <span class="o">+=</span> <span class="n">size</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">idx</span> <span class="o">+</span> <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iSize</span> <span class="o">==</span> <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iNext</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 如果可以和下一个区间合并
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">pNext</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreeBlk</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iSize</span> <span class="o">+=</span> <span class="n">pNext</span><span class="o">-&gt;</span><span class="n">iSize</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iNext</span> <span class="o">=</span> <span class="n">pNext</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nFree</span> <span class="o">+=</span> <span class="n">size</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">idx</span> <span class="o">=</span> <span class="o">*</span><span class="n">pIdx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">pNew</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreeBlk</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">start</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 检查是否可以和后面的区间合并
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">idx</span> <span class="o">!=</span> <span class="n">end</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">iSize</span> <span class="o">=</span> <span class="n">size</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">iNext</span> <span class="o">=</span> <span class="n">idx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNext</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreeBlk</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">idx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">iSize</span> <span class="o">=</span> <span class="n">size</span> <span class="o">+</span> <span class="n">pNext</span><span class="o">-&gt;</span><span class="n">iSize</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">iNext</span> <span class="o">=</span> <span class="n">pNext</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">*</span><span class="n">pIdx</span> <span class="o">=</span> <span class="n">start</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nFree</span> <span class="o">+=</span> <span class="n">size</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>一个MemPage逻辑上来说由多个排序的Cell组成，但在物理存储时即不保证有序也不保证连续。由于插入数据时不一定有序，因此要保证物理存储有序需要移动数据而导致额外的开销，因此实现时并不会移动数据，但通过CellHdr.iNext构成了一个有序的Cell链表。由于删除数据时也不会移动数据，因此Cell之间可能有空洞，这些空洞使用FreeBlk表示，并通过FreeBlk.iNext构成了一个链表。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">FreeBlk</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="n">iSize</span><span class="p">;</span>      <span class="cm">/* Number of bytes in this block of free space */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="n">iNext</span><span class="p">;</span>      <span class="cm">/* Index in MemPage.u.aDisk[] of the next free block */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>从磁盘加载page后，通过initPage维护内存中的辅助信息，将所有Cell加载到内存中的apCell数组，计算总的空闲字节数信息。initPage后，可以通过apCell随机访问一个Cell，而不需要通过Cell链表顺序访问。在插入时，新的Cell可能超出page size，在短暂的时间内apCell会有指向aDisk外的Cell。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">initPage</span><span class="p">(</span><span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">,</span> <span class="n">Pgno</span> <span class="n">pgnoThis</span><span class="p">,</span> <span class="n">MemPage</span> <span class="o">*</span><span class="n">pParent</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">idx</span><span class="p">;</span>           <span class="cm">/* An index into pPage-&gt;u.aDisk[] */</span>
</span></span><span class="line"><span class="cl">  <span class="n">Cell</span> <span class="o">*</span><span class="n">pCell</span><span class="p">;</span>       <span class="cm">/* A pointer to a Cell in pPage-&gt;u.aDisk[] */</span>
</span></span><span class="line"><span class="cl">  <span class="n">FreeBlk</span> <span class="o">*</span><span class="n">pFBlk</span><span class="p">;</span>    <span class="cm">/* A pointer to a free block in pPage-&gt;u.aDisk[] */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">sz</span><span class="p">;</span>            <span class="cm">/* The size of a Cell in bytes */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">freeSpace</span><span class="p">;</span>     <span class="cm">/* Amount of free space on the page */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">pParent</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">pParent</span><span class="o">==</span><span class="n">pParent</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pParent</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">pParent</span> <span class="o">=</span> <span class="n">pParent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 增加引用计数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">sqlitepager_ref</span><span class="p">(</span><span class="n">pParent</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">isInit</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">isInit</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">freeSpace</span> <span class="o">=</span> <span class="n">USABLE_SPACE</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">idx</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">firstCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span><span class="p">(</span> <span class="n">idx</span><span class="o">!=</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 剩余空间存不下一个Cell  
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">idx</span><span class="o">&gt;</span><span class="n">SQLITE_PAGE_SIZE</span><span class="o">-</span><span class="n">MIN_CELL_SIZE</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">page_format_error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 起始地址在PageHdr内
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">idx</span><span class="o">&lt;</span><span class="k">sizeof</span><span class="p">(</span><span class="n">PageHdr</span><span class="p">)</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">page_format_error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 没有4字节对齐
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">idx</span><span class="o">!=</span><span class="n">ROUNDUP</span><span class="p">(</span><span class="n">idx</span><span class="p">)</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">page_format_error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pCell</span> <span class="o">=</span> <span class="p">(</span><span class="n">Cell</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">idx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="n">sz</span> <span class="o">=</span> <span class="n">cellSize</span><span class="p">(</span><span class="n">pCell</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 超过了page size
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">idx</span><span class="o">+</span><span class="n">sz</span> <span class="o">&gt;</span> <span class="n">SQLITE_PAGE_SIZE</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">page_format_error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">freeSpace</span> <span class="o">-=</span> <span class="n">sz</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 加载到cell数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">pCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">idx</span> <span class="o">=</span> <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nFree</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">idx</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">firstFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span><span class="p">(</span> <span class="n">idx</span><span class="o">!=</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">idx</span><span class="o">&gt;</span><span class="n">SQLITE_PAGE_SIZE</span><span class="o">-</span><span class="k">sizeof</span><span class="p">(</span><span class="n">FreeBlk</span><span class="p">)</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">page_format_error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">idx</span><span class="o">&lt;</span><span class="k">sizeof</span><span class="p">(</span><span class="n">PageHdr</span><span class="p">)</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">page_format_error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pFBlk</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreeBlk</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">idx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 维护空闲byte数统计信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nFree</span> <span class="o">+=</span> <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iSize</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="o">&gt;</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iNext</span> <span class="o">&lt;=</span> <span class="n">idx</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">page_format_error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">idx</span> <span class="o">=</span> <span class="n">pFBlk</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* As a special case, an uninitialized root page appears to be
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** an empty database */</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">!=</span><span class="n">freeSpace</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">page_format_error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">page_format_error</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_CORRUPT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="b树操作">B树操作</h2>
<h3 id="创建b树">创建B树</h3>
<p>先看创建数据库的实现。如果已经至少有2个页，则直接返回。否则创建2个页，并初始化第1个页为PageOne，对第2个页调用zeroPage来重置为一个包含0项的B树节点页。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">newDatabase</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pRoot</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">PageOne</span> <span class="o">*</span><span class="n">pP1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">sqlitepager_pagecount</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">1</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pP1</span> <span class="o">=</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">page1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">page1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">strcpy</span><span class="p">(</span><span class="n">pP1</span><span class="o">-&gt;</span><span class="n">zMagic</span><span class="p">,</span> <span class="n">zMagicHeader</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pP1</span><span class="o">-&gt;</span><span class="n">iMagic</span> <span class="o">=</span> <span class="n">MAGIC</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">zeroPage</span><span class="p">(</span><span class="n">pRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>sqliteBtreeCreateTable</code> 要做的事情很简单，分配一个页作为根页，返回页号。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeCreateTable</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">piTable</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pRoot</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">pgnoRoot</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ERROR</span><span class="p">;</span>  <span class="cm">/* Must start a transaction first */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">readOnly</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_READONLY</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 如果有空闲的，用空闲的，否则分配一个新page
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">allocatePage</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pRoot</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pgnoRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sqlitepager_iswriteable</span><span class="p">(</span><span class="n">pRoot</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">zeroPage</span><span class="p">(</span><span class="n">pRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 不在使用中就调unref
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 返回根所在的页号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="o">*</span><span class="n">piTable</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">pgnoRoot</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="cursor操作">Cursor操作</h3>
<p>Cursor用于B树的遍历或者定位，其定义如下。mPage指向当前的page，idx指向当前的项。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">** A cursor is a pointer to a particular entry in the BTree.
</span></span></span><span class="line"><span class="cl"><span class="cm">** The entry is identified by its MemPage and the index in
</span></span></span><span class="line"><span class="cl"><span class="cm">** MemPage.apCell[] of the entry.
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">BtCursor</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">;</span>               <span class="cm">/* The Btree to which this cursor belongs */</span>
</span></span><span class="line"><span class="cl">  <span class="n">BtCursor</span> <span class="o">*</span><span class="n">pNext</span><span class="p">,</span> <span class="o">*</span><span class="n">pPrev</span><span class="p">;</span>  <span class="cm">/* Forms a linked list of all cursors */</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">pgnoRoot</span><span class="p">;</span>            <span class="cm">/* The root page of this tree */</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">;</span>           <span class="cm">/* Page that contains the entry */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">idx</span><span class="p">;</span>                  <span class="cm">/* Index of the entry in pPage-&gt;apCell[] */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">wrFlag</span><span class="p">;</span>                <span class="cm">/* True if writable */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">bSkipNext</span><span class="p">;</span>             <span class="cm">/* sqliteBtreeNext() is no-op if true */</span>
</span></span><span class="line"><span class="cl">  <span class="n">u8</span> <span class="n">iMatch</span><span class="p">;</span>                <span class="cm">/* compare result from last sqliteBtreeMoveto() */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>调用<code>sqliteBtreeCursor</code> 创建一个Cursor</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeCursor</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iTable</span><span class="p">,</span> <span class="kt">int</span> <span class="n">wrFlag</span><span class="p">,</span> <span class="n">BtCursor</span> <span class="o">**</span><span class="n">ppCur</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">ptr</span> <span class="n">nLock</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">page1</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 打开PageOne，并获取一个数据库读锁
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">lockBtree</span><span class="p">(</span><span class="n">pBt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="o">*</span><span class="n">ppCur</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">wrFlag</span> <span class="o">&amp;&amp;</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">readOnly</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span><span class="n">ppCur</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_READONLY</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span> <span class="o">=</span> <span class="n">sqliteMalloc</span><span class="p">(</span> <span class="k">sizeof</span><span class="p">(</span><span class="o">*</span><span class="n">pCur</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_NOMEM</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">create_cursor_exception</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 设置root页号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pgnoRoot</span> <span class="o">=</span> <span class="p">(</span><span class="n">Pgno</span><span class="p">)</span><span class="n">iTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 获取当前页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pgnoRoot</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">create_cursor_exception</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 初始化page在内存中的额外辅助信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">initPage</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pgnoRoot</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">create_cursor_exception</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">nLock</span> <span class="o">=</span> <span class="p">(</span><span class="n">ptr</span><span class="p">)</span><span class="n">sqliteHashFind</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">locks</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">iTable</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// nLock &lt; 0说明已被别人上了写锁
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// nLock &gt; 0 说明已被别人上了读锁，如果wrFlag为true，则获取写锁失败
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">nLock</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">||</span> <span class="p">(</span><span class="n">nLock</span><span class="o">&gt;</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">wrFlag</span><span class="p">)</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_LOCKED</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">goto</span> <span class="n">create_cursor_exception</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 写锁为负，读锁为正，0即NULL表示没有锁
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">nLock</span> <span class="o">=</span> <span class="n">wrFlag</span> <span class="o">?</span> <span class="o">-</span><span class="mi">1</span> <span class="o">:</span> <span class="n">nLock</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqliteHashInsert</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">locks</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">iTable</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">nLock</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span> <span class="o">=</span> <span class="n">pBt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">wrFlag</span> <span class="o">=</span> <span class="n">wrFlag</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 维护cursor链表
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pNext</span> <span class="o">=</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pCursor</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pNext</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pNext</span><span class="o">-&gt;</span><span class="n">pPrev</span> <span class="o">=</span> <span class="n">pCur</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPrev</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pCursor</span> <span class="o">=</span> <span class="n">pCur</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="o">*</span><span class="n">ppCur</span> <span class="o">=</span> <span class="n">pCur</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">create_cursor_exception</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="o">*</span><span class="n">ppCur</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span> <span class="p">)</span> <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqliteFree</span><span class="p">(</span><span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">unlockBtreeIfUnused</span><span class="p">(</span><span class="n">pBt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个版本的Cursor支持的操作为First, Last, Next, Moveto，分别指向第一个、最后一个、下一个、指定的key。</p>
<p><code>sqliteBtreeFirst</code> 先将Cursor指向root，然后沿着左子指针不断移动。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeFirst</span><span class="p">(</span><span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">pRes</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_ABORT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToRoot</span><span class="p">(</span><span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToLeftmost</span><span class="p">(</span><span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">bSkipNext</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">moveToRoot</span><span class="p">(</span><span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pNew</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 载入page，并修改cursor指向的page
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pgnoRoot</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pNew</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">initPage</span><span class="p">(</span><span class="n">pNew</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pgnoRoot</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span> <span class="o">=</span> <span class="n">pNew</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 重置idx为0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">moveToLeftmost</span><span class="p">(</span><span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">pgno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 沿着最左的child指针不断移动
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">while</span><span class="p">(</span> <span class="p">(</span><span class="n">pgno</span> <span class="o">=</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="p">)</span><span class="o">!=</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToChild</span><span class="p">(</span><span class="n">pCur</span><span class="p">,</span> <span class="n">pgno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">moveToChild</span><span class="p">(</span><span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">,</span> <span class="kt">int</span> <span class="n">newPgno</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pNewPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// 载入page，并修改cursor指向的page
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">newPgno</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pNewPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">initPage</span><span class="p">(</span><span class="n">pNewPage</span><span class="p">,</span> <span class="n">newPgno</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span> <span class="o">=</span> <span class="n">pNewPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>sqliteBtreeNext</code> 移动到下一个KV。如果这一层还没遍历完，先将idx指向下一个Cell，然后移动到该Cell下层的最左节点。否则向上层回溯，由于采用的是B树实现，回溯到上层的有效节点就可以返回了，因为中间节点也存储着数据。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeNext</span><span class="p">(</span><span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">pRes</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pRes</span> <span class="p">)</span> <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ABORT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 之前的操作已经指向了下一个元素，直接返回
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">bSkipNext</span> <span class="o">&amp;&amp;</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">&lt;</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">bSkipNext</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pRes</span> <span class="p">)</span> <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// idx + 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 已经遍历完这个page
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">&gt;=</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 如果存在右子树
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 移动到右子树
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToChild</span><span class="p">(</span><span class="n">pCur</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 移动到右子树下的最左节点
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToLeftmost</span><span class="p">(</span><span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">pRes</span> <span class="p">)</span> <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">do</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// pParent == 0 说明整个树已遍历完
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">pParent</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span> <span class="n">pRes</span> <span class="p">)</span> <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 移动到parent
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToParent</span><span class="p">(</span><span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">while</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">&gt;=</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// B树的中间节点也存储数据，因此这里返回了。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">pRes</span> <span class="p">)</span> <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 移动到该节点下的最左节点
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToLeftmost</span><span class="p">(</span><span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pRes</span> <span class="p">)</span> <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">moveToParent</span><span class="p">(</span><span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">oldPgno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pParent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pParent</span> <span class="o">=</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">pParent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pParent</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_INTERNAL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">oldPgno</span> <span class="o">=</span> <span class="n">sqlitepager_pagenumber</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqlitepager_ref</span><span class="p">(</span><span class="n">pParent</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span> <span class="o">=</span> <span class="n">pParent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">=</span> <span class="n">pParent</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">pParent</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pParent</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="o">==</span><span class="n">oldPgno</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 设置idx为包含原child的Cell的下标
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>sqliteBtreeMoveto</code> 将Cursor移动到指定key附近的KV。在key不存在时，有可能指向在该key之前或之后的key，使用*pRes的值来表示不同的结果（&lt;0 之前的key，=0 恰好指向，&gt;0 之后的key）。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeMoveto</span><span class="p">(</span><span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">,</span> <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">pKey</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nKey</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">pRes</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_ABORT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">bSkipNext</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 先移动到root页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToRoot</span><span class="p">(</span><span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(;;){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">lwr</span><span class="p">,</span> <span class="n">upr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Pgno</span> <span class="n">chldPg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span> <span class="o">=</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">lwr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">upr</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 二分查找
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">while</span><span class="p">(</span> <span class="n">lwr</span><span class="o">&lt;=</span><span class="n">upr</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">=</span> <span class="p">(</span><span class="n">lwr</span><span class="o">+</span><span class="n">upr</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 比较当前idx指向的Cell和key的大小关系，必要时会加载overflow页的数据。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteBtreeKeyCompare</span><span class="p">(</span><span class="n">pCur</span><span class="p">,</span> <span class="n">pKey</span><span class="p">,</span> <span class="n">nKey</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">c</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">iMatch</span> <span class="o">=</span> <span class="n">c</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span> <span class="n">pRes</span> <span class="p">)</span> <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">c</span><span class="o">&lt;</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">lwr</span> <span class="o">=</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">upr</span> <span class="o">=</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">lwr</span><span class="o">==</span><span class="n">upr</span><span class="o">+</span><span class="mi">1</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">lwr</span><span class="o">&gt;=</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">chldPg</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">chldPg</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">lwr</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 没有child页了则返回
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">chldPg</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">iMatch</span> <span class="o">=</span> <span class="n">c</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">pRes</span> <span class="p">)</span> <span class="o">*</span><span class="n">pRes</span> <span class="o">=</span> <span class="n">c</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 从该child处继续找
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">moveToChild</span><span class="p">(</span><span class="n">pCur</span><span class="p">,</span> <span class="n">chldPg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="cm">/* NOT REACHED */</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="插入删除">插入删除</h3>
<p>在插入KV时，先将Cursor移动到key附近，然后根据是否存在key做一些不同<code>apCell</code> 数组的维护工作，最后调用rebalance来做树平衡。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">** Insert a new record into the BTree.  The key is given by (pKey,nKey)
</span></span></span><span class="line"><span class="cl"><span class="cm">** and the data is given by (pData,nData).  The cursor is used only to
</span></span></span><span class="line"><span class="cl"><span class="cm">** define what database the record should be inserted into.  The cursor
</span></span></span><span class="line"><span class="cl"><span class="cm">** is left pointing at the new record.
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeInsert</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">,</span>                <span class="cm">/* Insert data into the table of this cursor */</span>
</span></span><span class="line"><span class="cl">  <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">pKey</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nKey</span><span class="p">,</span>    <span class="cm">/* The key of the new record */</span>
</span></span><span class="line"><span class="cl">  <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">pData</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nData</span>   <span class="cm">/* The data of the new record */</span>
</span></span><span class="line"><span class="cl"><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">Cell</span> <span class="n">newCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">loc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">szNew</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span> <span class="o">=</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ABORT</span><span class="p">;</span>  <span class="cm">/* A rollback destroyed this cursor */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span> <span class="o">||</span> <span class="n">nKey</span><span class="o">+</span><span class="n">nData</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ERROR</span><span class="p">;</span>  <span class="cm">/* Must start a transaction first */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">wrFlag</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_PERM</span><span class="p">;</span>   <span class="cm">/* Cursor not open for writing */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 移动到key附近
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteBtreeMoveto</span><span class="p">(</span><span class="n">pCur</span><span class="p">,</span> <span class="n">pKey</span><span class="p">,</span> <span class="n">nKey</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">loc</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage</span> <span class="o">=</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 分配一个cell来存放key/value，可能有overflow 页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">fillInCell</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">newCell</span><span class="p">,</span> <span class="n">pKey</span><span class="p">,</span> <span class="n">nKey</span><span class="p">,</span> <span class="n">pData</span><span class="p">,</span> <span class="n">nData</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">szNew</span> <span class="o">=</span> <span class="n">cellSize</span><span class="p">(</span><span class="o">&amp;</span><span class="n">newCell</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">loc</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 恰好匹配，需要删除之前的Cell。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 调用clearCell释放涉及的overflow页，调用dropCell来从apCell数组中删除。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">newCell</span><span class="p">.</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">clearCell</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">dropCell</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">,</span> <span class="n">cellSize</span><span class="p">(</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">]));</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="n">loc</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">&gt;</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="o">==</span><span class="mi">0</span> <span class="p">);</span>  <span class="cm">/* Must be a leaf page */</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// idx+1指向下一个位置，和下面的else得到相同的结果
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// rightChild说明是leaf页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">assert</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="o">==</span><span class="mi">0</span> <span class="p">);</span>  <span class="cm">/* Must be a leaf page */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 将新的Cell插入，执行完成后有可能超出page size，后面的balance会处理。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">insertCell</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">newCell</span><span class="p">,</span> <span class="n">szNew</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">balance</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="cm">/* sqliteBtreePageDump(pCur-&gt;pBt, pCur-&gt;pgnoRoot, 1); */</span>
</span></span><span class="line"><span class="cl">  <span class="cm">/* fflush(stdout); */</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">insertCell</span><span class="p">(</span><span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">,</span> <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">Cell</span> <span class="o">*</span><span class="n">pCell</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sz</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">idx</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">i</span><span class="o">&gt;=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sz</span><span class="o">==</span><span class="n">cellSize</span><span class="p">(</span><span class="n">pCell</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sqlitepager_iswriteable</span><span class="p">(</span><span class="n">pPage</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 分配空间不足，idx==0说明没有足够的空间。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">idx</span> <span class="o">=</span> <span class="n">allocateSpace</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">sz</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">j</span><span class="o">&gt;</span><span class="n">i</span><span class="p">;</span> <span class="n">j</span><span class="o">--</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">idx</span><span class="o">&lt;=</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 空间不足，标记已overfull
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">isOverfull</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">memcpy</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">idx</span><span class="p">],</span> <span class="n">pCell</span><span class="p">,</span> <span class="n">sz</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">Cell</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">idx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">allocateSpace</span><span class="p">(</span><span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nByte</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">FreeBlk</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="o">*</span><span class="n">pIdx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">start</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sqlitepager_iswriteable</span><span class="p">(</span><span class="n">pPage</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">nByte</span><span class="o">==</span><span class="n">ROUNDUP</span><span class="p">(</span><span class="n">nByte</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 空间不足或者之前已经不足过
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">&lt;</span><span class="n">nByte</span> <span class="o">||</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">isOverfull</span> <span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">firstFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreeBlk</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="o">*</span><span class="n">pIdx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span><span class="p">(</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">iSize</span><span class="o">&lt;</span><span class="n">nByte</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">cnt</span><span class="o">++</span> <span class="o">&lt;</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="o">/</span><span class="mi">4</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 没有一个足够大的空闲块，需要整理页。将所有的Cell移动到页的开始，最后有一个大的空闲块。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">defragmentPage</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">firstFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreeBlk</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="o">*</span><span class="n">pIdx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 正好匹配
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">iSize</span><span class="o">==</span><span class="n">nByte</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">start</span> <span class="o">=</span> <span class="o">*</span><span class="n">pIdx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span><span class="n">pIdx</span> <span class="o">=</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 分裂出一个新块
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">FreeBlk</span> <span class="o">*</span><span class="n">pNew</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">start</span> <span class="o">=</span> <span class="o">*</span><span class="n">pIdx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNew</span> <span class="o">=</span> <span class="p">(</span><span class="n">FreeBlk</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">[</span><span class="n">start</span> <span class="o">+</span> <span class="n">nByte</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">iNext</span> <span class="o">=</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">iSize</span> <span class="o">=</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">iSize</span> <span class="o">-</span> <span class="n">nByte</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span><span class="n">pIdx</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="n">nByte</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nFree</span> <span class="o">-=</span> <span class="n">nByte</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">start</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>sqliteBtreeDelete</code> 用于删除Cursor当前指向的KV。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeDelete</span><span class="p">(</span><span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span> <span class="o">=</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">Cell</span> <span class="o">*</span><span class="n">pCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">Pgno</span> <span class="n">pgnoChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ABORT</span><span class="p">;</span>  <span class="cm">/* A rollback destroyed this cursor */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ERROR</span><span class="p">;</span>  <span class="cm">/* Must start a transaction first */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">&gt;=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_ERROR</span><span class="p">;</span>  <span class="cm">/* The cursor is not pointing to anything */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">wrFlag</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">SQLITE_PERM</span><span class="p">;</span>   <span class="cm">/* Did not open this cursor for writing */</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pCell</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="n">pgnoChild</span> <span class="o">=</span> <span class="n">pCell</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">clearCell</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pCell</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pgnoChild</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** The entry we are about to delete is not a leaf so if we do not
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** do something we will leave a hole on an internal page.
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** We have to fill the hole by moving in a cell from a leaf.  The
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** next Cell after the one to be deleted is guaranteed to exist and
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** to be a leaf so we can use it.
</span></span></span><span class="line"><span class="cl"><span class="cm">    */</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 如果不是叶节点，将该节点的下一个节点移动过来，以满足B树的要求。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">BtCursor</span> <span class="n">leafCur</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Cell</span> <span class="o">*</span><span class="n">pNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">szNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">getTempCursor</span><span class="p">(</span><span class="n">pCur</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">leafCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 找到next节点
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqliteBtreeNext</span><span class="p">(</span><span class="o">&amp;</span><span class="n">leafCur</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">SQLITE_CORRUPT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">leafCur</span><span class="p">.</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 从当前page drop当前cell
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">dropCell</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">,</span> <span class="n">cellSize</span><span class="p">(</span><span class="n">pCell</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">pNext</span> <span class="o">=</span> <span class="n">leafCur</span><span class="p">.</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">leafCur</span><span class="p">.</span><span class="n">idx</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="n">szNext</span> <span class="o">=</span> <span class="n">cellSize</span><span class="p">(</span><span class="n">pNext</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 修改next节点的leftChild值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">pNext</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span> <span class="o">=</span> <span class="n">pgnoChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 将next节点插入到当前的page
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">insertCell</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">,</span> <span class="n">pNext</span><span class="p">,</span> <span class="n">szNext</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 平衡
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">balance</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">bSkipNext</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 将next节点drop掉
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">dropCell</span><span class="p">(</span><span class="n">leafCur</span><span class="p">.</span><span class="n">pPage</span><span class="p">,</span> <span class="n">leafCur</span><span class="p">.</span><span class="n">idx</span><span class="p">,</span> <span class="n">szNext</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 平衡
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">balance</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="p">,</span> <span class="n">leafCur</span><span class="p">.</span><span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">releaseTempCursor</span><span class="p">(</span><span class="o">&amp;</span><span class="n">leafCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// drop cell  
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">dropCell</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="p">,</span> <span class="n">cellSize</span><span class="p">(</span><span class="n">pCell</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">&gt;=</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span><span class="o">&lt;</span><span class="mi">0</span> <span class="p">){</span> 
</span></span><span class="line"><span class="cl">        <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">bSkipNext</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">bSkipNext</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">bSkipNext</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">balance</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pPage</span><span class="p">,</span> <span class="n">pCur</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="平衡操作">平衡操作</h3>
<p>在看balance实现之前，先看几个辅助函数</p>
<p><code>relinkCellList</code> 用于在插入或删除Cell后，更新<code>MemPage.u.aDisk</code> 中的next指针，这是因为在insertCell和dropCell中只处理了MemPage.apCell，没有处理aDisk中的iNext。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">relinkCellList</span><span class="p">(</span><span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="o">*</span><span class="n">pIdx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sqlitepager_iswriteable</span><span class="p">(</span><span class="n">pPage</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">firstCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">-</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">idx</span><span class="o">&gt;</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">idx</span><span class="o">&lt;</span><span class="n">SQLITE_PAGE_SIZE</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span><span class="n">pIdx</span> <span class="o">=</span> <span class="n">idx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">*</span><span class="n">pIdx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>copyPage</code> 用于拷贝存在overfull时的page，对于不在page的Cell，拷贝后的page仍然指向原内存。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">copyPage</span><span class="p">(</span><span class="n">MemPage</span> <span class="o">*</span><span class="n">pTo</span><span class="p">,</span> <span class="n">MemPage</span> <span class="o">*</span><span class="n">pFrom</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">uptr</span> <span class="n">from</span><span class="p">,</span> <span class="n">to</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">memcpy</span><span class="p">(</span><span class="n">pTo</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">,</span> <span class="n">pFrom</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">aDisk</span><span class="p">,</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pTo</span><span class="o">-&gt;</span><span class="n">pParent</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pTo</span><span class="o">-&gt;</span><span class="n">isInit</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pTo</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="o">=</span> <span class="n">pFrom</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pTo</span><span class="o">-&gt;</span><span class="n">nFree</span> <span class="o">=</span> <span class="n">pFrom</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pTo</span><span class="o">-&gt;</span><span class="n">isOverfull</span> <span class="o">=</span> <span class="n">pFrom</span><span class="o">-&gt;</span><span class="n">isOverfull</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">to</span> <span class="o">=</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pTo</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">from</span> <span class="o">=</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pFrom</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">pTo</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">uptr</span> <span class="n">x</span> <span class="o">=</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pFrom</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 如果在page范围内，更新，否则用from的值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">x</span><span class="o">&gt;</span><span class="n">from</span> <span class="o">&amp;&amp;</span> <span class="n">x</span><span class="o">&lt;</span><span class="n">from</span><span class="o">+</span><span class="n">SQLITE_PAGE_SIZE</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="o">*</span><span class="p">((</span><span class="n">uptr</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pTo</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">to</span> <span class="o">-</span> <span class="n">from</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">pTo</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pFrom</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>reparentChildPages</code> 用于在移动page后修改内存中的child页的<code>pParent</code> 指针，因为<code>pParent</code> 指针仅在内存中存储，所以在实现时不需要从磁盘加载没有缓存的page。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">reparentChildPages</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">,</span> <span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">reparentPage</span><span class="p">(</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="p">,</span> <span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">reparentPage</span><span class="p">(</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="p">,</span> <span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">reparentPage</span><span class="p">(</span><span class="n">Pager</span> <span class="o">*</span><span class="n">pPager</span><span class="p">,</span> <span class="n">Pgno</span> <span class="n">pgno</span><span class="p">,</span> <span class="n">MemPage</span> <span class="o">*</span><span class="n">pNewParent</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">MemPage</span> <span class="o">*</span><span class="n">pThis</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pgno</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">pPager</span><span class="o">!=</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 只需要修改内存中缓存的页的parent，因此调lookup而不是get
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">pThis</span> <span class="o">=</span> <span class="n">sqlitepager_lookup</span><span class="p">(</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pgno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pThis</span> <span class="o">&amp;&amp;</span> <span class="n">pThis</span><span class="o">-&gt;</span><span class="n">isInit</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pThis</span><span class="o">-&gt;</span><span class="n">pParent</span><span class="o">!=</span><span class="n">pNewParent</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">pThis</span><span class="o">-&gt;</span><span class="n">pParent</span> <span class="p">)</span> <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pThis</span><span class="o">-&gt;</span><span class="n">pParent</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">pThis</span><span class="o">-&gt;</span><span class="n">pParent</span> <span class="o">=</span> <span class="n">pNewParent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">pNewParent</span> <span class="p">)</span> <span class="n">sqlitepager_ref</span><span class="p">(</span><span class="n">pNewParent</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pThis</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>铺垫完成，下面来看B树的平衡实现。</p>
<p><code>balance</code> 用于实现B树的平衡，它的基本思想很简单，找到页面相邻的两个兄弟页面，然后根据这三个页面的总空间需求，分配新的页面来存储，新的页面的free空间尽可能均匀。最终兄弟页面的个数可能会加1或减1，目标是页面的空间使用在66%到100%之间。</p>
<p>1 先看root page的处理。</p>
<ul>
<li>如果Cell个数为0，且有rightChild，将rightChild的页拷贝过来作为新的root page。拷贝之后需要修改内存中child页的parent指针。</li>
<li>如果root页overfull，创建一个新的child页拷贝过去，然后将root页设置为空，并且rightChild指向新页，后面的逻辑会执行新页的split。通过这样的处理可以复用非root页的balance逻辑。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">balance</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">,</span> <span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">,</span> <span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 省略一些变量定义
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">  <span class="n">pParent</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">pParent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 1 root页处理
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">pParent</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">Pgno</span> <span class="n">pgnoChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">MemPage</span> <span class="o">*</span><span class="n">pChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 如果root page没有cell但rightChild不为空
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">if</span><span class="p">(</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">        ** The root page is empty.  Copy the one child page
</span></span></span><span class="line"><span class="cl"><span class="cm">        ** into the root page and return.  This reduces the depth
</span></span></span><span class="line"><span class="cl"><span class="cm">        ** of the BTree by one.
</span></span></span><span class="line"><span class="cl"><span class="cm">        */</span>
</span></span><span class="line"><span class="cl">        <span class="n">pgnoChild</span> <span class="o">=</span> <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pgnoChild</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pChild</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 拷贝过来后重新初始化
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">memcpy</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">pChild</span><span class="p">,</span> <span class="n">SQLITE_PAGE_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">isInit</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">rc</span> <span class="o">=</span> <span class="n">initPage</span><span class="p">(</span><span class="n">pPage</span><span class="p">,</span> <span class="n">sqlitepager_pagenumber</span><span class="p">(</span><span class="n">pPage</span><span class="p">),</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">assert</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 拷贝之后，修改内存中的child页的parent指针
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">reparentChildPages</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span> <span class="o">&amp;&amp;</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">==</span><span class="n">pChild</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">          <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pChild</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">          <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span> <span class="o">=</span> <span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">          <span class="n">sqlitepager_ref</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">freePage</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pChild</span><span class="p">,</span> <span class="n">pgnoChild</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pChild</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">relinkCellList</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">isOverfull</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="cm">/* It is OK for the root page to be less than half full.
</span></span></span><span class="line"><span class="cl"><span class="cm">      */</span>
</span></span><span class="line"><span class="cl">      <span class="n">relinkCellList</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** If we get to here, it means the root page is overfull.
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** When this happens, Create a new child page and copy the
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** contents of the root into the child.  Then make the root
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** page an empty page with rightChild pointing to the new
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** child.  Then fall thru to the code below which will cause
</span></span></span><span class="line"><span class="cl"><span class="cm">    ** the overfull child page to be split.
</span></span></span><span class="line"><span class="cl"><span class="cm">    */</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// root页overfull，创建一个新的child页拷贝过去，
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 然后将root页设置为空，并且rightChild指向新页，后面的逻辑会执行新页的split
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">allocatePage</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pChild</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pgnoChild</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">sqlitepager_iswriteable</span><span class="p">(</span><span class="n">pChild</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 和上面memcpy然后initPage的区别在于，copyPage会考虑overfull，这些cell仍然指向pFrom的原始内存
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">copyPage</span><span class="p">(</span><span class="n">pChild</span><span class="p">,</span> <span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pChild</span><span class="o">-&gt;</span><span class="n">pParent</span> <span class="o">=</span> <span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlitepager_ref</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pChild</span><span class="o">-&gt;</span><span class="n">isOverfull</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span> <span class="o">&amp;&amp;</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="o">==</span><span class="n">pPage</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span> <span class="o">=</span> <span class="n">pChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">extraUnref</span> <span class="o">=</span> <span class="n">pChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">zeroPage</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span> <span class="o">=</span> <span class="n">pgnoChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pParent</span> <span class="o">=</span> <span class="n">pPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pPage</span> <span class="o">=</span> <span class="n">pChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 需要修改parent页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_write</span><span class="p">(</span><span class="n">pParent</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>2 在页的左右各取一个兄弟。如果页是最左或最右时，会取同一边的两个兄弟。如果兄弟个数少于等于3，会用上所有的兄弟页。这些页的Cell加上parent中分割的Cell会一起计算总的空间需求，用于分配新页。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">  <span class="c1">// 省略一些逻辑，设置idx为parent页指向本页的Cell的下标
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 2 在页左右各取一个兄弟。如果页是最左或最右时，会取同一边的两个兄弟。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// 如果兄弟个数少于等于3，会用上所有的兄弟页。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span><span class="p">(</span> <span class="n">idx</span><span class="o">==</span><span class="n">pParent</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">nxDiv</span> <span class="o">=</span> <span class="n">idx</span> <span class="o">-</span> <span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">nxDiv</span> <span class="o">=</span> <span class="n">idx</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">nxDiv</span><span class="o">&lt;</span><span class="mi">0</span> <span class="p">)</span> <span class="n">nxDiv</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">nDiv</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">k</span><span class="o">=</span><span class="n">nxDiv</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">,</span> <span class="n">k</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">k</span><span class="o">&lt;</span><span class="n">pParent</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// parent只分割Cell的index
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">idxDiv</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">k</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 获取parent中的分割Cell，会和兄弟page的Cell一起用于分配新页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">apDiv</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pParent</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">k</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="n">nDiv</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">pgnoOld</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">apDiv</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span> <span class="nf">if</span><span class="p">(</span> <span class="n">k</span><span class="o">==</span><span class="n">pParent</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">pgnoOld</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pParent</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 加载兄弟页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_get</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pgnoOld</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="p">(</span><span class="kt">void</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">apOld</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">balance_cleanup</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">initPage</span><span class="p">(</span><span class="n">apOld</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">pgnoOld</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">pParent</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">balance_cleanup</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">nOld</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>3 将找到的兄弟页拷贝到内存中的临时页，因为这些兄弟页后续可能会修改。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// 3 将这些页拷贝到内存中新页，因为原始页有可能修改。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nOld</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">copyPage</span><span class="p">(</span><span class="o">&amp;</span><span class="n">aOld</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">apOld</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">freePage</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="n">apOld</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">pgnoOld</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">balance_cleanup</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">apOld</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="n">apOld</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">aOld</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>4  计算兄弟页和parent中的分割Cell需要使用的空间，把这些Cell都拷贝到apCell数组，然后计算需要分配多少新页，每个新页的剩余空间保证相对均匀。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="c1">// 4 计算兄弟页和parent中的分割Cell需要使用的空间，把这些Cell都拷贝到apCell数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">Cell</span> <span class="o">*</span><span class="n">apCell</span><span class="p">[</span><span class="n">MX_CELL</span><span class="o">*</span><span class="mi">3</span><span class="o">+</span><span class="mi">5</span><span class="p">];</span>   <span class="cm">/* All cells from pages being balanceed */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">szCell</span><span class="p">[</span><span class="n">MX_CELL</span><span class="o">*</span><span class="mi">3</span><span class="o">+</span><span class="mi">5</span><span class="p">];</span>     <span class="cm">/* Local size of all cells */</span>
</span></span><span class="line"><span class="cl">  <span class="n">nCell</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nOld</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">MemPage</span> <span class="o">*</span><span class="n">pOld</span> <span class="o">=</span> <span class="n">apOld</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">pOld</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">apCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]</span> <span class="o">=</span> <span class="n">pOld</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="n">szCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]</span> <span class="o">=</span> <span class="n">cellSize</span><span class="p">(</span><span class="n">apCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">      <span class="n">nCell</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 拷贝parent中的分割Cell
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nOld</span><span class="o">-</span><span class="mi">1</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">szCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]</span> <span class="o">=</span> <span class="n">cellSize</span><span class="p">(</span><span class="n">apDiv</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">      <span class="n">memcpy</span><span class="p">(</span><span class="o">&amp;</span><span class="n">aTemp</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">apDiv</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">szCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">      <span class="n">apCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">aTemp</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 临时从parent中删除
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">dropCell</span><span class="p">(</span><span class="n">pParent</span><span class="p">,</span> <span class="n">nxDiv</span><span class="p">,</span> <span class="n">szCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">      <span class="n">assert</span><span class="p">(</span> <span class="n">apCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="o">==</span><span class="n">pgnoOld</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">apCell</span><span class="p">[</span><span class="n">nCell</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span> <span class="o">=</span> <span class="n">pOld</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">nCell</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// 计算总的size
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">totalSize</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">totalSize</span> <span class="o">+=</span> <span class="n">szCell</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">cntNew</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>               <span class="cm">/* Index in apCell[] of cell after i-th page */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">szNew</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>                <span class="cm">/* Combined size of cells place on i-th page */</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">subtotal</span><span class="o">=</span><span class="n">k</span><span class="o">=</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">subtotal</span> <span class="o">+=</span> <span class="n">szCell</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// #define USABLE_SPACE  (SQLITE_PAGE_SIZE - sizeof(PageHdr))
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 分配一个新页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span> <span class="n">subtotal</span> <span class="o">&gt;</span> <span class="n">USABLE_SPACE</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">szNew</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">subtotal</span> <span class="o">-</span> <span class="n">szCell</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="n">cntNew</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">subtotal</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">k</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">szNew</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">subtotal</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">cntNew</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">nCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">k</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 经过上一个循环，前面的页会接近满，而后面的页有可能接近空
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// 下面的循环再进行调整，至少占满USABLE_SPACE/2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span><span class="p">(</span> <span class="n">szNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&lt;</span><span class="n">USABLE_SPACE</span><span class="o">/</span><span class="mi">2</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 从前面挪Cell
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">cntNew</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">assert</span><span class="p">(</span> <span class="n">cntNew</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">szNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="n">szCell</span><span class="p">[</span><span class="n">cntNew</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]];</span>
</span></span><span class="line"><span class="cl">      <span class="n">szNew</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="n">szCell</span><span class="p">[</span><span class="n">cntNew</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">cntNew</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="c1">// 分配k个新页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">k</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">allocatePage</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">apNew</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="o">&amp;</span><span class="n">pgnoNew</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="k">goto</span> <span class="n">balance_cleanup</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">nNew</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">zeroPage</span><span class="p">(</span><span class="n">apNew</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="n">apNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">isInit</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>5 将新页按照页号排序，然后写入Cell到新页，并把分割的Cell插入到parent中。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">  <span class="c1">// 5 将新页按照页号排序，排序后磁盘文件是有序的，scan操作是线性的。注释中说排序可以让大的插入和删除快25%。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">minV</span> <span class="o">=</span> <span class="n">pgnoNew</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">minI</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">k</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span> <span class="n">pgnoNew</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">&lt;</span><span class="n">minV</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">minI</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">minV</span> <span class="o">=</span> <span class="n">pgnoNew</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">minI</span><span class="o">&gt;</span><span class="n">i</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="kt">int</span> <span class="n">t</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">MemPage</span> <span class="o">*</span><span class="n">pT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">t</span> <span class="o">=</span> <span class="n">pgnoNew</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="n">pT</span> <span class="o">=</span> <span class="n">apNew</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="n">pgnoNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pgnoNew</span><span class="p">[</span><span class="n">minI</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="n">apNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">apNew</span><span class="p">[</span><span class="n">minI</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="n">pgnoNew</span><span class="p">[</span><span class="n">minI</span><span class="p">]</span> <span class="o">=</span> <span class="n">t</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">apNew</span><span class="p">[</span><span class="n">minI</span><span class="p">]</span> <span class="o">=</span> <span class="n">pT</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** Evenly distribute the data in apCell[] across the new pages.
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** Insert divider cells into pParent as necessary.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nNew</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">MemPage</span> <span class="o">*</span><span class="n">pNew</span> <span class="o">=</span> <span class="n">apNew</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span><span class="p">(</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">cntNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">assert</span><span class="p">(</span> <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">nFree</span><span class="o">&gt;=</span><span class="n">szCell</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 插入到页中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">insertCell</span><span class="p">(</span><span class="n">pNew</span><span class="p">,</span> <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">,</span> <span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">szCell</span><span class="p">[</span><span class="n">j</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">      <span class="n">j</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="o">&gt;</span><span class="mi">0</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="o">!</span><span class="n">pNew</span><span class="o">-&gt;</span><span class="n">isOverfull</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 维护Cell的next指针
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">relinkCellList</span><span class="p">(</span><span class="n">pNew</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nNew</span><span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 按照B树的性质，右兄弟节点的子结点也大于自己，所以这里是设置rightChild
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">pNew</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span> <span class="o">=</span> <span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 设置parent的分割Cell的leftChild为pgnoNew[i]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span> <span class="o">=</span> <span class="n">pgnoNew</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 分割的Cell插入parent
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="n">insertCell</span><span class="p">(</span><span class="n">pParent</span><span class="p">,</span> <span class="n">nxDiv</span><span class="p">,</span> <span class="n">apCell</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">szCell</span><span class="p">[</span><span class="n">j</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">      <span class="n">j</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="n">nxDiv</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">j</span><span class="o">==</span><span class="n">nCell</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">apNew</span><span class="p">[</span><span class="n">nNew</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span> <span class="o">=</span> <span class="n">apOld</span><span class="p">[</span><span class="n">nOld</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">nxDiv</span><span class="o">==</span><span class="n">pParent</span><span class="o">-&gt;</span><span class="n">nCell</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pParent</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">rightChild</span> <span class="o">=</span> <span class="n">pgnoNew</span><span class="p">[</span><span class="n">nNew</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">pParent</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">nxDiv</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">leftChild</span> <span class="o">=</span> <span class="n">pgnoNew</span><span class="p">[</span><span class="n">nNew</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>6 最后做一些维护工作。由于balance可能修改parent，所以对parent调用balance。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** Reparent children of all cells.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nNew</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">reparentChildPages</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">apNew</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">reparentChildPages</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">,</span> <span class="n">pParent</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">  ** balance the parent page.
</span></span></span><span class="line"><span class="cl"><span class="cm">  */</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">balance</span><span class="p">(</span><span class="n">pBt</span><span class="p">,</span> <span class="n">pParent</span><span class="p">,</span> <span class="n">pCur</span><span class="p">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="事务操作">事务操作</h3>
<p>多个读事务可以同时执行。</p>
<p>写事务执行时，其他读写事务都不能执行。</p>
<p>事务实现基本就是调用下Pager的事务操作。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeBeginTrans</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_ERROR</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">page1</span><span class="o">==</span><span class="mi">0</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 加载页面，如果数据库不为空，校验magic number
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">lockBtree</span><span class="p">(</span><span class="n">pBt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">!=</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">readOnly</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlitepager_begin</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">page1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">rc</span> <span class="o">=</span> <span class="n">newDatabase</span><span class="p">(</span><span class="n">pBt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">rc</span><span class="o">==</span><span class="n">SQLITE_OK</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inCkpt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">unlockBtreeIfUnused</span><span class="p">(</span><span class="n">pBt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeRollback</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">BtCursor</span> <span class="o">*</span><span class="n">pCur</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_OK</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inCkpt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">pCur</span><span class="o">=</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pCursor</span><span class="p">;</span> <span class="n">pCur</span><span class="p">;</span> <span class="n">pCur</span><span class="o">=</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pNext</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span> <span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="n">sqlitepager_unref</span><span class="p">(</span><span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">pCur</span><span class="o">-&gt;</span><span class="n">pPage</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">readOnly</span> <span class="o">?</span> <span class="nl">SQLITE_OK</span> <span class="p">:</span> <span class="n">sqlitepager_rollback</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">unlockBtreeIfUnused</span><span class="p">(</span><span class="n">pBt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqliteBtreeCommit</span><span class="p">(</span><span class="n">Btree</span> <span class="o">*</span><span class="n">pBt</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span><span class="o">==</span><span class="mi">0</span> <span class="p">)</span> <span class="k">return</span> <span class="n">SQLITE_ERROR</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">rc</span> <span class="o">=</span> <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">readOnly</span> <span class="o">?</span> <span class="nl">SQLITE_OK</span> <span class="p">:</span> <span class="n">sqlitepager_commit</span><span class="p">(</span><span class="n">pBt</span><span class="o">-&gt;</span><span class="n">pPager</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inTrans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">pBt</span><span class="o">-&gt;</span><span class="n">inCkpt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">unlockBtreeIfUnused</span><span class="p">(</span><span class="n">pBt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="对比boltdb">对比BoltDB</h2>
<ol>
<li>sqlite自己做page buffer管理，需要处理page淘汰、脏页写盘，而BoltDB使用系统mmap来管理内存，很多管理逻辑都委托给OS，实现相对简单。</li>
<li>这个版本的sqlite只有B树实现，而BoltDB使用B+树实现。</li>
<li>sqlite的rebalance实现更加复杂，BoltDB相对简单。</li>
</ol>
<h2 id="代码技巧">代码技巧</h2>
<p>sqlite实现中的一些代码技巧值得学习</p>
<ol>
<li>
<p>将地址当作数组访问，然后方便的定位到该结构体前后的内存。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="cp">#define PGHDR_TO_DATA(P)  ((void*)(&amp;(P)[1]))
</span></span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>通过指针来简化一些处理，类似于<a href="https://coolshell.cn/articles/8990.html">Linus：利用二级指针删除单向链表 | 酷 壳 - CoolShell</a>的技巧。</p>
<p>比如下面的代码中，如果不用指针，firstCell和iNext需要分别去设置，但通过指针把它们的设置逻辑统一了起来。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">relinkCellList</span><span class="p">(</span><span class="n">MemPage</span> <span class="o">*</span><span class="n">pPage</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">u16</span> <span class="o">*</span><span class="n">pIdx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">assert</span><span class="p">(</span> <span class="n">sqlitepager_iswriteable</span><span class="p">(</span><span class="n">pPage</span><span class="p">)</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">hdr</span><span class="p">.</span><span class="n">firstCell</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">nCell</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">-</span> <span class="n">Addr</span><span class="p">(</span><span class="n">pPage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">assert</span><span class="p">(</span> <span class="n">idx</span><span class="o">&gt;</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">idx</span><span class="o">&lt;</span><span class="n">SQLITE_PAGE_SIZE</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span><span class="n">pIdx</span> <span class="o">=</span> <span class="n">idx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">pIdx</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">pPage</span><span class="o">-&gt;</span><span class="n">apCell</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">h</span><span class="p">.</span><span class="n">iNext</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">*</span><span class="n">pIdx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
